{
  "name": "button",
  "files": [
    {
      "name": "button.tsx",
      "content": "import { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\nimport Link from \"next/link\";\nimport { AnchorHTMLAttributes, ButtonHTMLAttributes, forwardRef } from \"react\";\n\nconst buttonVariants = cva(\n  \"trans inline-flex h-10 items-center justify-center rounded-md px-4 text-sm font-medium disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:opacity-[85%]\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:opacity-[85%]\",\n        outline:\n          \"border border-foreground bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary: \"bg-secondary text-secondary-foreground hover:opacity-[85%]\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> &\n  VariantProps<typeof buttonVariants>;\n\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, ...props }, ref) => {\n    return (\n      <button\n        {...props}\n        ref={ref}\n        className={cn(buttonVariants({ variant, className }))}\n      />\n    );\n  },\n);\n\ntype LinkButtonProps = AnchorHTMLAttributes<HTMLAnchorElement> &\n  VariantProps<typeof buttonVariants> & { href: string };\n\nconst LinkButton = forwardRef<HTMLAnchorElement, LinkButtonProps>(\n  ({ className, variant, href, ...props }, ref) => {\n    return (\n      <Link\n        {...props}\n        ref={ref}\n        href={href}\n        className={cn(buttonVariants({ variant, className }))}\n      />\n    );\n  },\n);\n\nexport { Button, LinkButton, buttonVariants };\n"
    }
  ],
  "type": "components:ui"
}